name: Pantheon Secrets
on:
  push:
  repository_dispatch:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      tmate_enabled:
        description: Enable tmate debugging
        required: true
        default: "0"
      preserve_multidev:
        description: Preserve testing multidev environments
        required: true
        default: "0"
jobs:
  linting:
    runs-on: ubuntu-latest
    container:
      image: quay.io/pantheon-public/build-tools-ci:8.x-php7.4
      options: --user root
    name: Code linting
    env:
      TZ: "/usr/share/zoneinfo/America/Los_Angeles"
      TERM: dumb
      TERMINUS_TOKEN: ${{ secrets.TERMINUS_TOKEN }}
      TERMINUS_SITE: ${{ vars.TERMINUS_SITE }}
      GIT_EMAIL: ${{ vars.GIT_EMAIL }}
      GITHUB_RUN_NUMBER: ${{ github.run_number }}
      COMMIT_SHA: ${{ github.sha }}
      BASH_ENV: ~/.bashrc
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Composer install
        run: composer install --ignore-platform-req=php

      - name: Code sniff
        run: composer run-script code:lint
  phpcompatibility:
    runs-on: ubuntu-latest
    name: PHP Compatibility
    steps:
      - name: PHPCompatibility
        uses: pantheon-systems/phpcompatibility-action@v1
        with:
          test-versions: 7.4-
  build_test:
    strategy:
      matrix:
        drupal-version: [ 9, 10 ]
      fail-fast: false
    runs-on: ubuntu-latest
    container:
      image: quay.io/pantheon-public/build-tools-ci:8.x-php8.1
      options: --user root
    name: Build and test (Drupal ${{ matrix.drupal-version }})
    env:
      TZ: "/usr/share/zoneinfo/America/Los_Angeles"
      TERM: dumb
      TERMINUS_TOKEN: ${{ secrets.TERMINUS_TOKEN }}
      TERMINUS_SITE: ${{ vars.TERMINUS_SITE }}
      GIT_EMAIL: ${{ vars.GIT_EMAIL }}
      GITHUB_RUN_NUMBER: ${{ github.run_number }}
      COMMIT_SHA: ${{ github.sha }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      BASH_ENV: ~/.bashrc
      DRUPAL_VERSION: ${{ matrix.drupal-version }}
      TERMINUS_BASE_ENV: dev
      MULTIDEV_NAME: d${{ matrix.drupal-version }}-${{ github.run_number }}
      GIT_BRANCH: ${{ github.ref_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login
        run: |
          git config --global user.email "$GIT_EMAIL"
          git config --global user.name "Github Actions"
          git config --global --add safe.directory '*'
          mkdir -p /root/.ssh && echo "${{ vars.SSH_CONFIG }}" >> "/root/.ssh/config"

      - name: Log in to Terminus
        run: |
          terminus auth:login -n --machine-token="$TERMINUS_TOKEN"
          terminus auth:whoami

      - name: Setup SSH Keys
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Make multidev
        run: ./.ci/create-multidev.sh &

      - name: Setup tmate session
        if: ${{ github.event.inputs.tmate_enabled == 1 }}
        uses: mxschmitt/action-tmate@v3

      - name: Add stuff to the site.
        run: ./.ci/setup-drupal-repo.sh

      - name: Install secrets plugin
        run: terminus self:plugin:install pantheon-systems/terminus-secrets-manager-plugin

      - name: Wait for multidev to be ready
        timeout-minutes: 10
        run: |
          while [ ! -f multidev-made.txt ]
          do
            sleep 2
          done
          exit 0

      - name: Push changes to the new multidev
        run: git push --set-upstream origin $MULTIDEV_NAME -f
        working-directory: drupal-site

      - name: Install new module
        run: |
          terminus build:workflow:wait ${TERMINUS_SITE}.${MULTIDEV_NAME}
          terminus drush ${TERMINUS_SITE}.${MULTIDEV_NAME} -- en -y pantheon_secrets

      - name: Run tests
        run: |
          ./.ci/run-tests.sh

      - name: Cleanup
        if: ${{ always() && github.event.inputs.preserve_multidev == 0 }}
        run: |
          terminus env:delete ${TERMINUS_SITE}.${MULTIDEV_NAME} -y
